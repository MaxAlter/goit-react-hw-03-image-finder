{"version":3,"sources":["components/Searchbar/searchbar.js","components/ImageGalleryItem/imageGalleryItem.js","components/ImageGallery/imageGallery.js","components/Loader/loader.js","components/Button/button.js","components/Modal/modal.js","components/servise/api.js","App.js","index.js"],"names":["Searchbar","state","query","handleOnChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","onChange","autoComplete","placeholder","Component","ImageGalleryItem","webImgURL","largeImgURL","openModal","onClick","src","alt","rel","ImageGallery","items","map","item","key","id","webformatURL","largeImageURL","App","color","height","width","React","Button","Modal","closeModal","fetchArticles","page","PARAMS","axios","get","articles","error","isLoading","isModalOpen","dataAPI","then","data","hits","catch","finally","handleClickOnMore","window","addEventListener","currentTarget","keyCode","removeEventListener","prevProps","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad9122a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./searchbar.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { query } = this.state;\r\n    this.props.onSubmit(query);\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.setState;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleOnChange}\r\n            value={query}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./imagegaleryitem.css\";\r\n\r\nconst ImageGalleryItem = ({ webImgURL, largeImgURL, openModal }) => {\r\n  return (\r\n    <li onClick={() => openModal(largeImgURL)} className=\"ImageGalleryItem\">\r\n      <img\r\n        className=\"ImageGalleryItem-image\"\r\n        src={webImgURL}\r\n        alt=\"img\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\n//\r\nImageGalleryItem.propTypes = {\r\n  webImgURL: PropTypes.string.isRequired,\r\n  largeImgURL: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./imagegallery.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/imageGalleryItem\";\r\n\r\nconst ImageGallery = ({ items, openModal }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {items.map((item) => (\r\n      <ImageGalleryItem\r\n        key={item.id}\r\n        webImgURL={item.webformatURL}\r\n        largeImgURL={item.largeImageURL}\r\n        openModal={openModal}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        // timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div className=\"div\">\r\n      <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        loade more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./madal.css\";\r\n\r\nconst Modal = ({ largeImgURL, closeModal }) => {\r\n  return (\r\n    <div onClick={closeModal} className=\"Overlay\">\r\n      <div className=\"Modal\">\r\n        <img src={largeImgURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  largeImgURL: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = `15346262-2d23a576c3ba87714cfd3e6d1`;\r\nconst BASE = `https://pixabay.com/api/`;\r\n\r\nexport const fetchArticles = (query, page) => {\r\n  const PARAMS = `?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return axios.get(BASE + PARAMS);\r\n};\r\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar/searchbar\";\nimport ImageGallery from \"./components/ImageGallery/imageGallery\";\nimport Loader from \"./components/Loader/loader\";\nimport Button from \"./components/Button/button\";\nimport Modal from \"./components/Modal/modal\";\nimport * as dataAPI from \"./components/servise/api\";\n\nexport default class App extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    articles: [],\n    error: null,\n    isLoading: false,\n    isModalOpen: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page, isModalOpen } = this.state;\n\n    if (isModalOpen) return;\n\n    if (prevState.page === page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  fetchArticles = (query, page = 1) => {\n    this.setState({ isLoading: true, query });\n    dataAPI\n      .fetchArticles(query, page)\n      .then(({ data }) => {\n        const { articles } = this.state;\n        this.setState({ articles: [...articles, ...data.hits] });\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  handleClickOnMore = () => {\n    const { page, query } = this.state;\n\n    this.setState({\n      page: page + 1,\n    });\n\n    this.fetchArticles(query, page + 1);\n  };\n\n  openModal = (largeImgURL) => {\n    this.setState({ isModalOpen: true, largeImgURL });\n    window.addEventListener(\"keydown\", this.closeModal);\n  };\n\n  closeModal = (e) => {\n    if (e.target === e.currentTarget || e.keyCode === 27)\n      this.setState({ isModalOpen: false });\n    window.removeEventListener(\"keydown\", this.closeModal);\n  };\n\n  render() {\n    const { articles, isLoading, largeImgURL, isModalOpen } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.fetchArticles} />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <ImageGallery items={articles} openModal={this.openModal} />\n        )}\n        {articles.length > 0 && <Button onClick={this.handleClickOnMore} />}\n        {isModalOpen && (\n          <Modal largeImgURL={largeImgURL} closeModal={this.closeModal} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}